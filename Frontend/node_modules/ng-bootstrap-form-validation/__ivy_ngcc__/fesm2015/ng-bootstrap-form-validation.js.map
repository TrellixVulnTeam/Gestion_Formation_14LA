{"version":3,"file":"ng-bootstrap-form-validation.js","sources":["ng-bootstrap-form-validation/lib/Enums/BootstrapVersion.ts","ng-bootstrap-form-validation/lib/Tokens/tokens.ts","ng-bootstrap-form-validation/lib/Directives/form-control.directive.ts","ng-bootstrap-form-validation/lib/Directives/form-validation.directive.ts","ng-bootstrap-form-validation/lib/Components/messages/messages.component.ts","ng-bootstrap-form-validation/lib/default-errors.ts","ng-bootstrap-form-validation/lib/Services/error-message.service.ts","ng-bootstrap-form-validation/lib/Components/form-group/form-group.component.ts","ng-bootstrap-form-validation/lib/ng-bootstrap-form-validation.module.ts","ng-bootstrap-form-validation/public_api.ts","ng-bootstrap-form-validation/ng-bootstrap-form-validation.ts"],"names":[],"mappings":"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","sourcesContent":["export enum BootstrapVersion {\n  Three,\n  Four\n}\n","import { InjectionToken } from \"@angular/core\";\nimport { BootstrapVersion } from \"../Enums/BootstrapVersion\";\nimport { ErrorMessage } from \"../Models/error-message\";\n\nexport const CUSTOM_ERROR_MESSAGES = new InjectionToken<ErrorMessage[]>(\n  \"ng-bootstrap-form-validation custom error messages\"\n);\n\nexport const BOOTSTRAP_VERSION = new InjectionToken<BootstrapVersion>(\n  \"ng-bootstrap-form-validation module options\"\n);\n","import {\n  Directive,\n  Input,\n  HostBinding,\n  Optional,\n  Host,\n  SkipSelf,\n  Inject\n} from \"@angular/core\";\nimport { ControlContainer, FormControl } from \"@angular/forms\";\nimport { BootstrapVersion } from \"../Enums/BootstrapVersion\";\nimport { BOOTSTRAP_VERSION } from \"../Tokens/tokens\";\n\nexport function controlPath(name: string, parent: ControlContainer): string[] {\n  // tslint:disable-next-line:no-non-null-assertion\n  return [...parent.path!, name];\n}\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: \".form-control,.form-check-input,.custom-control-input\"\n})\nexport class FormControlDirective {\n  @Input()\n  formControlName: string;\n  @Input()\n  formControl: string;\n\n  @HostBinding(\"class.is-valid\")\n  get validClass() {\n    if (!this.control) {\n      return false;\n    }\n    return (\n      this.bootstrapFour &&\n      this.control.valid &&\n      (this.control.touched || this.control.dirty)\n    );\n  }\n\n  @HostBinding(\"class.is-invalid\")\n  get invalidClass() {\n    if (!this.control) {\n      return false;\n    }\n    return (\n      this.bootstrapFour &&\n      this.control.invalid &&\n      this.control.touched &&\n      this.control.dirty\n    );\n  }\n\n  get path() {\n    return controlPath(this.formControlName, this.parent);\n  }\n\n  get control(): FormControl {\n    return this.formDirective && this.formDirective.getControl(this);\n  }\n\n  get formDirective(): any {\n    return this.parent ? this.parent.formDirective : null;\n  }\n\n  get bootstrapFour() {\n    return this.bootstrapVersion === BootstrapVersion.Four;\n  }\n\n  constructor(\n    // this value might be null, but we union type it as such until\n    // this issue is resolved: https://github.com/angular/angular/issues/25544\n    @Optional()\n    @Host()\n    @SkipSelf()\n    private parent: ControlContainer,\n    @Inject(BOOTSTRAP_VERSION) private bootstrapVersion: BootstrapVersion\n  ) {}\n}\n","import {\n  Directive,\n  EventEmitter,\n  Input,\n  Output,\n  HostListener\n} from \"@angular/core\";\nimport {\n  AbstractControl,\n  FormArray,\n  FormControl,\n  FormGroup\n} from \"@angular/forms\";\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: \"[formGroup]\"\n})\nexport class FormValidationDirective {\n  @Input()\n  formGroup: FormGroup;\n  @Output()\n  validSubmit = new EventEmitter<any>();\n\n  @HostListener(\"submit\")\n  onSubmit() {\n    this.markAsTouchedAndDirty(this.formGroup);\n    if (this.formGroup.valid) {\n      this.validSubmit.emit(this.formGroup.value);\n    }\n  }\n\n  markAsTouchedAndDirty(control: AbstractControl) {\n    if (control instanceof FormGroup) {\n      Object.keys(control.controls).forEach(key =>\n        this.markAsTouchedAndDirty(control.controls[key])\n      );\n    } else if (control instanceof FormArray) {\n      control.controls.forEach(c => this.markAsTouchedAndDirty(c));\n    } else if (control instanceof FormControl && control.enabled) {\n      control.markAsDirty();\n      control.markAsTouched();\n      control.updateValueAndValidity();\n    }\n  }\n}\n","import { Component, Input, Inject } from \"@angular/core\";\nimport { BootstrapVersion } from \"../../../lib/Enums/BootstrapVersion\";\nimport { BOOTSTRAP_VERSION } from \"../../Tokens/tokens\";\n\n@Component({\n  selector: \"bfv-messages\",\n  template: `\n    <span [ngClass]=\"className\" *ngFor=\"let message of messages()\">{{message}}</span>\n  `,\n  styles: [\n    `\n      .invalid-feedback,\n      .valid-feedback {\n        display: block;\n      }\n    `\n  ]\n})\nexport class MessagesComponent {\n  @Input()\n  public messages = () => [];\n\n  get className() {\n    switch (this.bootstrapVersion) {\n      case BootstrapVersion.Three:\n        return \"help-block\";\n      case BootstrapVersion.Four:\n        return \"invalid-feedback\";\n    }\n  }\n\n  constructor(\n    @Inject(BOOTSTRAP_VERSION) private bootstrapVersion: BootstrapVersion\n  ) {}\n}\n","import { ErrorMessage } from \"./Models/error-message\";\n\nexport const DEFAULT_ERRORS: ErrorMessage[] = [\n  {\n    error: \"required\",\n    format: label => `${label} is required`\n  },\n  {\n    error: \"pattern\",\n    format: label => `${label} is invalid`\n  },\n  {\n    error: \"minlength\",\n    format: (label, error) =>\n      `${label} must be at least ${error.requiredLength} characters`\n  },\n  {\n    error: \"maxlength\",\n    format: (label, error) =>\n      `${label} must be no longer than ${error.requiredLength} characters`\n  },\n  {\n    error: \"requiredTrue\",\n    format: (label, error) => `${label} is required`\n  },\n  {\n    error: \"email\",\n    format: (label, error) => `Invalid email address`\n  },\n  {\n    error: \"max\",\n    format: (label, error) => `${label} must be no greater than ${error.max}`\n  },\n  {\n    error: \"min\",\n    format: (label, error) => `${label} must be no less than ${error.min}`\n  }\n];\n","import { Injectable, Inject } from \"@angular/core\";\nimport { DEFAULT_ERRORS } from \"../default-errors\";\nimport { CUSTOM_ERROR_MESSAGES } from \"../Tokens/tokens\";\nimport { ErrorMessage } from \"../Models/error-message\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ErrorMessageService {\n  private defaultErrors = DEFAULT_ERRORS;\n\n  public errorMessages: ErrorMessage[];\n\n  constructor(\n    @Inject(CUSTOM_ERROR_MESSAGES) public customErrorMessages: ErrorMessage[][]\n  ) {\n    this.errorMessages = customErrorMessages.reduce(\n      (acc, cur) => acc.concat(cur),\n      this.defaultErrors\n    );\n  }\n}\n","import {\n  Component,\n  ContentChildren,\n  ContentChild,\n  ElementRef,\n  HostBinding,\n  Input,\n  QueryList,\n  OnInit,\n  AfterContentInit\n} from \"@angular/core\";\nimport { FormControlName } from \"@angular/forms\";\nimport { ErrorMessageService } from \"../../Services/error-message.service\";\nimport { MessagesComponent } from \"../messages/messages.component\";\nimport { ErrorMessage } from \"../../Models/error-message\";\n\n@Component({\n  // tslint:disable:component-selector\n  selector: \".form-group\",\n  template: `\n    <ng-content></ng-content>\n    <bfv-messages *ngIf=\"!messagesBlock\" [messages]=\"messages\"></bfv-messages>\n  `\n})\nexport class FormGroupComponent implements OnInit, AfterContentInit {\n  @ContentChildren(FormControlName, {descendants: true})\n  FormControlNames: QueryList<FormControlName>;\n\n  @Input()\n  customErrorMessages: ErrorMessage[] = [];\n\n  @Input()\n  validationDisabled = false;\n\n  @HostBinding(\"class.has-error\")\n  get hasErrors() {\n    return (\n      this.FormControlNames.some(c => !c.valid && c.dirty && c.touched) &&\n      !this.validationDisabled\n    );\n  }\n\n  @HostBinding(\"class.has-success\")\n  get hasSuccess() {\n    return (\n      !this.FormControlNames.some(c => !c.valid) &&\n      this.FormControlNames.some(c => c.dirty && c.touched) &&\n      !this.validationDisabled\n    );\n  }\n\n  @ContentChild(MessagesComponent)\n  public messagesBlock: MessagesComponent;\n\n  private errorMessages: ErrorMessage[];\n\n  public messages = () => this.getMessages();\n\n  constructor(\n    private elRef: ElementRef,\n    private errorMessageService: ErrorMessageService\n  ) {}\n\n  ngAfterContentInit() {\n    if (this.messagesBlock) {\n      this.messagesBlock.messages = this.messages;\n    }\n  }\n\n  ngOnInit() {\n    this.errorMessages = this.errorMessageService.errorMessages\n      .concat(this.customErrorMessages)\n      .reverse();\n  }\n\n  get label() {\n    const label = this.elRef.nativeElement.querySelector(\"label\");\n    return label && label.textContent ? label.textContent.trim() : \"This field\";\n  }\n\n  get isDirtyAndTouched() {\n    return this.FormControlNames.some(c => c.dirty && c.touched);\n  }\n\n  private getMessages(): string[] {\n    const messages = [];\n    if (!this.isDirtyAndTouched || this.validationDisabled) {\n      return messages;\n    }\n\n    const names = this.FormControlNames.map(f => f.name);\n\n    this.FormControlNames.filter(\n      (c, i) =>\n        !c.valid &&\n        !!c.errors &&\n        // filter out FormControlNames that share the same name - usually for radio buttons\n        names.indexOf(c.name) === i\n    ).forEach(control => {\n      Object.keys(control.errors).forEach(key => {\n        const error = this.errorMessages.find(err => err.error === key);\n        if (!error) {\n          return;\n        }\n        messages.push(error.format(this.label, control.errors[key]));\n      });\n    });\n\n    return messages;\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule, ModuleWithProviders } from \"@angular/core\";\nimport { FormValidationDirective } from \"./Directives/form-validation.directive\";\nimport { MessagesComponent } from \"./Components/messages/messages.component\";\nimport { ErrorMessageService } from \"./Services/error-message.service\";\nimport { CUSTOM_ERROR_MESSAGES, BOOTSTRAP_VERSION } from \"./Tokens/tokens\";\nimport { BootstrapVersion } from \"./Enums/BootstrapVersion\";\nimport { FormGroupComponent } from \"./Components/form-group/form-group.component\";\nimport { NgBootstrapFormValidationModuleOptions } from \"./Models/NgBootstrapFormValidationModuleOptions\";\nimport { FormControlDirective } from \"./Directives/form-control.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    FormValidationDirective,\n    FormGroupComponent,\n    MessagesComponent,\n    FormControlDirective\n  ],\n  exports: [\n    FormValidationDirective,\n    FormGroupComponent,\n    MessagesComponent,\n    FormControlDirective\n  ]\n})\nexport class NgBootstrapFormValidationModule {\n  static forRoot(\n    userOptions: NgBootstrapFormValidationModuleOptions = {\n      bootstrapVersion: BootstrapVersion.Four\n    }\n  ): ModuleWithProviders<NgBootstrapFormValidationModule> {\n    return {\n      ngModule: NgBootstrapFormValidationModule,\n      providers: [\n        {\n          provide: CUSTOM_ERROR_MESSAGES,\n          useValue: userOptions.customErrorMessages || [],\n          multi: true\n        },\n        {\n          provide: BOOTSTRAP_VERSION,\n          useValue: userOptions.bootstrapVersion\n        },\n        ErrorMessageService\n      ]\n    };\n  }\n}\n","/*\n * Public API Surface of ng-bootstrap-form-validation\n */\n\nexport { ErrorMessage, FormatErrorFunction } from \"./lib/Models/error-message\";\nexport { FormControlDirective } from \"./lib/Directives/form-control.directive\";\nexport {\n  FormValidationDirective\n} from \"./lib/Directives/form-validation.directive\";\nexport {\n  MessagesComponent\n} from \"./lib/Components/messages/messages.component\";\nexport {\n  FormGroupComponent\n} from \"./lib/Components/form-group/form-group.component\";\nexport { BootstrapVersion } from \"./lib/Enums/BootstrapVersion\";\nexport * from \"./lib/Tokens/tokens\";\nexport {\n  NgBootstrapFormValidationModule\n} from \"./lib/ng-bootstrap-form-validation.module\";\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {ErrorMessageService as Éµa} from './lib/Services/error-message.service';"]}